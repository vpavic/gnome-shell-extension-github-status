#!/usr/bin/env python3

import signal
import gi

gi.require_version('Gtk', '3.0')
gi.require_version('AppIndicator3', '0.1')
gi.require_version('Notify', '0.7')

from gi.repository import Gtk as gtk
from gi.repository import AppIndicator3 as appindicator
from gi.repository import Notify as notify


APP_ID = 'indicator-github-status'
APP_NAME = 'Github Status Indicator'
APP_ICON = 'indicator-github-status'
APP_VERSION = '0.1.0'


class Indicator(object):
    def __init__(self):
        builder = gtk.Builder()
        builder.add_from_file('gui.glade')

        self.indicator = appindicator.Indicator.new(
            APP_ID,
            APP_ICON,
            appindicator.IndicatorCategory.SYSTEM_SERVICES)
        self.indicator.set_status(appindicator.IndicatorStatus.ACTIVE)

        self.menu = builder.get_object('menu')
        self.menu.show()
        self.indicator.set_menu(self.menu)

        self.about = builder.get_object('aboutdialog')
        self.about.set_version(APP_VERSION)

        builder.connect_signals(self)

    def on_status(self, menuitem, data=None):
        print('TODO')

    def on_refresh(self, menuitem, data=None):
        print('TODO')

    def on_about(self, menuitem, data=None):
        self.about.set_position(gtk.WindowPosition.CENTER_ALWAYS)
        self.about.run()
        self.about.hide()

    def on_quit(self, menuitem, data=None):
        notify.uninit()
        gtk.main_quit()


indicator = Indicator()
notify.init(APP_ID)
signal.signal(signal.SIGINT, signal.SIG_DFL)
gtk.main()
